[moons_time]

seed = [i for i in range(10)]
noise = 0.02
size_train = [100, 500, 1000, 5000]
data = "moons-"+str(noise).replace(".", "_")+"-"+str(seed)+"-"+str(size_train)
learner = ["c-bound-mcallester", "c-bound-joint", "c-bound-seeger", "bound-risk", "bound-joint", "mincq", "cb-boost", "nothing"]

nb_per_attribute = [32, 64, 128]
nb_tree = 100
voter = "stump"

prior = 0.5
multi = 0

delta = 0.05
epoch = 2000

command = python optimize.py chap_4_moons.csv ${params}

[moons_time -- binary]

seed = [i for i in range(10)]
data = ["credit", "heart", "usvotes", "wdbc", "tictactoe", "svmguide", "haberman", "phishing"]
learner = ["c-bound-mcallester", "c-bound-joint", "c-bound-seeger", "bound-risk", "bound-joint", "mincq", "cb-boost", "nothing"]

nb_per_attribute = 10
nb_tree = 100
voter = ["stump", "tree"]

prior = 0.5
multi = 0

delta = 0.05
epoch = 2000

; command = python optimize.py chap_4.csv ${params}

[binary -- multiclass]

seed = [i for i in range(10)]
data = ["mnist", "fashion", "pendigits", "protein", "shuttle", "sensorless", "glass"]
learner = ["c-bound-mcallester", "c-bound-joint", "c-bound-seeger", "bound-risk", "bound-joint", "nothing"]

nb_per_attribute = 10
nb_tree = 100
voter = "tree"

prior = 0.5
multi = 0

delta = 0.05
epoch = 20
batch_size = 64

; command = python optimize.py chap_4.csv ${params}
